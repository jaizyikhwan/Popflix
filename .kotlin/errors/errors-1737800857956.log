kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/jaizyikhwan/AndroidStudioProjects/Popflix2/feature_favorite/src/main/java/com/jaizyikhwan/feature_favorite/ui/FavoriteFilmScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at jdk.internal.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:FavoriteFilmScreen visibility:public modality:FINAL <> () returnType:kotlin.Unit
  annotations:
    Composable
  BLOCK_BODY
    VAR PROPERTY_DELEGATE name:viewModel$delegate type:kotlin.Lazy<com.example.feature_favorite.presentation.FavoriteViewModel> [val]
      TYPE_OP type=kotlin.Lazy<com.example.feature_favorite.presentation.FavoriteViewModel> origin=IMPLICIT_CAST typeOperand=kotlin.Lazy<com.example.feature_favorite.presentation.FavoriteViewModel>
        CALL 'public final fun viewModel$default <T> (qualifier: org.koin.core.qualifier.Qualifier?, owner: androidx.lifecycle.ViewModelStoreOwner?, scope: org.koin.core.scope.Scope?, parameters: kotlin.Function0<org.koin.core.parameter.ParametersHolder>?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Lazy<T of org.koin.androidx.compose.ViewModelComposeExtKt.viewModel$default> [inline] declared in org.koin.androidx.compose.ViewModelComposeExtKt' type=kotlin.Lazy<T of org.koin.androidx.compose.ViewModelComposeExtKt.viewModel$default> origin=DEFAULT_DISPATCH_CALL
          <T>: com.example.feature_favorite.presentation.FavoriteViewModel
          qualifier: COMPOSITE type=org.koin.core.qualifier.Qualifier? origin=DEFAULT_VALUE
            CONST Null type=org.koin.core.qualifier.Qualifier? value=null
          owner: COMPOSITE type=androidx.lifecycle.ViewModelStoreOwner? origin=DEFAULT_VALUE
            CONST Null type=androidx.lifecycle.ViewModelStoreOwner? value=null
          scope: COMPOSITE type=org.koin.core.scope.Scope? origin=DEFAULT_VALUE
            CONST Null type=org.koin.core.scope.Scope? value=null
          parameters: COMPOSITE type=kotlin.Function0<org.koin.core.parameter.ParametersHolder>? origin=DEFAULT_VALUE
            CONST Null type=kotlin.Function0<org.koin.core.parameter.ParametersHolder>? value=null
          $mask0: CONST Int type=kotlin.Int value=15
          $handler: CONST Null type=kotlin.Any? value=null
    VAR PROPERTY_DELEGATE name:favoriteFilms$delegate type:androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> [val]
      TYPE_OP type=androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>>
        CALL 'public final fun collectAsState$default <T> (context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<T of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>
          $receiver: CALL 'public final fun <get-favoriteFilms> (): kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> declared in com.example.feature_favorite.presentation.FavoriteViewModel' type=kotlinx.coroutines.flow.StateFlow<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> origin=GET_PROPERTY
            $this: CALL 'private final fun FavoriteFilmScreen$lambda$0 ($viewModel$delegate: kotlin.Lazy<com.example.feature_favorite.presentation.FavoriteViewModel>): com.example.feature_favorite.presentation.FavoriteViewModel declared in com.jaizyikhwan.feature_favorite.ui.FavoriteFilmScreenKt' type=com.example.feature_favorite.presentation.FavoriteViewModel origin=GET_LOCAL_PROPERTY
              $viewModel$delegate: GET_VAR 'val viewModel$delegate: kotlin.Lazy<com.example.feature_favorite.presentation.FavoriteViewModel> [val] declared in com.jaizyikhwan.feature_favorite.ui.FavoriteFilmScreenKt.FavoriteFilmScreen' type=kotlin.Lazy<com.example.feature_favorite.presentation.FavoriteViewModel> origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public abstract fun isEmpty (): kotlin.Boolean declared in kotlin.collections.List' type=kotlin.Boolean origin=null
          $this: CALL 'private final fun FavoriteFilmScreen$lambda$1 ($favoriteFilms$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>>): kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film> declared in com.jaizyikhwan.feature_favorite.ui.FavoriteFilmScreenKt' type=kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film> origin=GET_LOCAL_PROPERTY
            $favoriteFilms$delegate: GET_VAR 'val favoriteFilms$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> [val] declared in com.jaizyikhwan.feature_favorite.ui.FavoriteFilmScreenKt.FavoriteFilmScreen' type=androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun Text-80ic1_w$default (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, fontSize: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, letterSpacing: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, overflow: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.TextKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
            text: CONST String type=kotlin.String value="No films available."
            modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.Modifier? value=null
            color: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.graphics.Color
                v: CONST Long type=kotlin.Long value=0
            fontSize: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.unit.TextUnit
                v: CONST Long type=kotlin.Long value=0
            fontStyle: COMPOSITE type=androidx.compose.ui.text.font.FontStyle? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.text.font.FontStyle? value=null
            fontWeight: COMPOSITE type=androidx.compose.ui.text.font.FontWeight? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.text.font.FontWeight? value=null
            fontFamily: COMPOSITE type=androidx.compose.ui.text.font.FontFamily? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.text.font.FontFamily? value=null
            letterSpacing: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.unit.TextUnit
                v: CONST Long type=kotlin.Long value=0
            textDecoration: COMPOSITE type=androidx.compose.ui.text.style.TextDecoration? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.text.style.TextDecoration? value=null
            textAlign: COMPOSITE type=androidx.compose.ui.text.style.TextAlign? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.text.style.TextAlign? value=null
            lineHeight: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.unit.TextUnit
                v: CONST Long type=kotlin.Long value=0
            overflow: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null
                <T>: kotlin.Int
                <R>: androidx.compose.ui.text.style.TextOverflow
                v: CONST Int type=kotlin.Int value=0
            softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
              CONST Boolean type=kotlin.Boolean value=false
            maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
              CONST Int type=kotlin.Int value=0
            onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE
              CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null
            style: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.text.TextStyle? value=null
            $mask0: CONST Int type=kotlin.Int value=131070
            $handler: CONST Null type=kotlin.Any? value=null
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun LazyColumn$default (modifier: androidx.compose.ui.Modifier?, state: androidx.compose.foundation.lazy.LazyListState?, contentPadding: androidx.compose.foundation.layout.PaddingValues?, reverseLayout: kotlin.Boolean, verticalArrangement: androidx.compose.foundation.layout.Arrangement.Vertical?, horizontalAlignment: androidx.compose.ui.Alignment.Horizontal?, flingBehavior: androidx.compose.foundation.gestures.FlingBehavior?, userScrollEnabled: kotlin.Boolean, content: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.foundation.lazy.LazyDslKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
            modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.Modifier? value=null
            state: COMPOSITE type=androidx.compose.foundation.lazy.LazyListState? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.foundation.lazy.LazyListState? value=null
            contentPadding: COMPOSITE type=androidx.compose.foundation.layout.PaddingValues? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.foundation.layout.PaddingValues? value=null
            reverseLayout: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
              CONST Boolean type=kotlin.Boolean value=false
            verticalArrangement: COMPOSITE type=androidx.compose.foundation.layout.Arrangement.Vertical? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.foundation.layout.Arrangement.Vertical? value=null
            horizontalAlignment: COMPOSITE type=androidx.compose.ui.Alignment.Horizontal? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.ui.Alignment.Horizontal? value=null
            flingBehavior: COMPOSITE type=androidx.compose.foundation.gestures.FlingBehavior? origin=DEFAULT_VALUE
              CONST Null type=androidx.compose.foundation.gestures.FlingBehavior? value=null
            userScrollEnabled: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
              CONST Boolean type=kotlin.Boolean value=false
            content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=null
                <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit>
                dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>>): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope, kotlin.Unit> origin=null
                  p0: GET_VAR 'val favoriteFilms$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> [val] declared in com.jaizyikhwan.feature_favorite.ui.FavoriteFilmScreenKt.FavoriteFilmScreen' type=androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>> origin=null
                bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  tag: CONST Int type=kotlin.Int value=6
                  owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                  name: CONST String type=kotlin.String value="metafactory"
                  descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                  isInterface: CONST Boolean type=kotlin.Boolean value=false
                bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
                  RAW_FUNCTION_REFERENCE 'private final fun FavoriteFilmScreen$lambda$3 ($favoriteFilms$delegate: androidx.compose.runtime.State<kotlin.collections.List<com.jaizyikhwan.core.domain.model.Film>>, $this$LazyColumn: androidx.compose.foundation.lazy.LazyListScope): kotlin.Unit? declared in com.jaizyikhwan.feature_favorite.ui.FavoriteFilmScreenKt' type=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.foundation.lazy.LazyListScope): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
            $mask0: CONST Int type=kotlin.Int value=255
            $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun viewModel$default <T> (qualifier: org.koin.core.qualifier.Qualifier?, owner: androidx.lifecycle.ViewModelStoreOwner?, scope: org.koin.core.scope.Scope?, parameters: kotlin.Function0<org.koin.core.parameter.ParametersHolder>?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Lazy<T of org.koin.androidx.compose.ViewModelComposeExtKt.viewModel$default> [inline] declared in org.koin.androidx.compose.ViewModelComposeExtKt' type=kotlin.Lazy<T of org.koin.androidx.compose.ViewModelComposeExtKt.viewModel$default> origin=DEFAULT_DISPATCH_CALL
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:1121)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitTypeOperator(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall.accept(IrTypeOperatorCall.kt:26)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 54 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Lorg/koin/androidx/compose/ViewModelComposeExtKt;.viewModel$default(Lorg/koin/core/qualifier/Qualifier;Landroidx/lifecycle/ViewModelStoreOwner;Lorg/koin/core/scope/Scope;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lkotlin/Lazy;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 72 more


